services:
  db:
    image: postgres:15
    container_name: postgres-db-dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - db-gobelin:/var/lib/postgresql/data
    networks:
      - backend


  liquibase:
    image: liquibase/liquibase:4.23
    container_name: liquibase
    restart: on-failure:5
    environment:
      LIQUIBASE_COMMAND_URL: ${DATABASE_URL_JDBC}
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog/changelog-master.xml
    volumes:
      - ./db/migrations/:/liquibase/changelog
    depends_on:
      - db
    entrypoint: ["sh", "-c", "liquibase update || echo 'Migration failed, retrying...'"]
    networks:
      - backend


  db-access:
    build:
      context: ./db-access
      dockerfile: Dockerfile.dev
    image: gobelin-db-access:${VERSION}
    container_name: db-access-dev
    restart: on-failure:5
    depends_on:
      - db
      - liquibase
    environment:
      DATABASE_URL_SQLALCHEMY: ${DATABASE_URL_SQLALCHEMY}
      LOG_LEVEL: ${LOG_LEVEL}
      ACTIVE_TESTS: ${ACTIVE_TESTS}
      POOL_SIZE: ${POOL_SIZE}
      MAX_OVERFLOW: ${MAX_OVERFLOW}
      POOL_TIMEOUT: ${POOL_TIMEOUT}
      POOL_RECYCLE: ${POOL_RECYCLE}
    volumes:
      - ./db-access/src:/db-access/src
      - ./db-access/config:/db-access/config
    ports:
      - 5678:5678
    networks:
      - backend
    entrypoint: /bin/sh
    command: |
      -c "
      if [ \"$ACTIVE_TESTS\" = \"True\" ]; then
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m pytest || exit 1;
      fi;"


  data-pipeline:
    build:
      context: ./data-pipeline
      dockerfile: Dockerfile.dev
    image: gobelin-data-pipeline:${VERSION}
    container_name: data-pipeline-dev
    restart: always
    depends_on:
      - db
      - liquibase
      - db-access
    environment:
      DATABASE_URL_SQLALCHEMY: ${DATABASE_URL_SQLALCHEMY}
      LOG_LEVEL: ${LOG_LEVEL}
      ACTIVE_TESTS: ${ACTIVE_TESTS}
    volumes:
      - ./data-pipeline/src:/data-pipeline/src
      - ./data-pipeline/config:/data-pipeline/config
    ports:
      - 5679:5678
    networks:
      - backend
    entrypoint: python
    command: -m debugpy --listen 0.0.0.0:5678 --wait-for-client src/main/main.py

volumes:
  db-gobelin:

networks:
  backend:
    driver: bridge